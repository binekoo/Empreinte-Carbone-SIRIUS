Index: xmart-city-backend/src/main/java/edu/ezip/ing1/pds/business/server/XMartCityService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.ezip.ing1.pds.business.server;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport edu.ezip.ing1.pds.business.dto.Student;\r\nimport edu.ezip.ing1.pds.business.dto.Students;\r\nimport edu.ezip.ing1.pds.commons.Request;\r\nimport edu.ezip.ing1.pds.commons.Response;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport java.io.IOException;\r\nimport java.lang.reflect.InvocationTargetException;\r\nimport java.lang.reflect.Method;\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedHashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class XMartCityService {\r\n\r\n    private final static String LoggingLabel = \"B u s i n e s s - S e r v e r\";\r\n    private final Logger logger = LoggerFactory.getLogger(LoggingLabel);\r\n\r\n    private enum Queries {\r\n        SELECT_ALL_STUDENTS(\"SELECT t.name, t.firstname, t.group FROM \\\"ezip-ing1\\\".students t\"),\r\n        INSERT_STUDENT(\"INSERT into \\\"ezip-ing1\\\".students (\\\"name\\\", \\\"firstname\\\", \\\"group\\\") values (?, ?, ?)\");\r\n        private final String query;\r\n\r\n        private Queries(final String query) {\r\n            this.query = query;\r\n        }\r\n    }\r\n\r\n    public static XMartCityService inst = null;\r\n    public static final XMartCityService getInstance()  {\r\n        if(inst == null) {\r\n            inst = new XMartCityService();\r\n        }\r\n        return inst;\r\n    }\r\n\r\n    private XMartCityService() {\r\n\r\n    }\r\n\r\n\r\n    public final Response dispatch(final Request request, final Connection connection)\r\n            throws InvocationTargetException, IllegalAccessException {\r\n        Response response = null;\r\n\r\n        if (request != null) {\r\n            String action = request.getRequestOrder();\r\n\r\n            switch (action) {\r\n                case \"SELECT_ALL_STUDENTS\": // request SELECT\r\n                    try {\r\n                        PreparedStatement selectStatement = connection.prepareStatement(Queries.SELECT_ALL_STUDENTS.query);\r\n                        ResultSet resultSet = selectStatement.executeQuery();\r\n\r\n                        Students students = new Students();\r\n\r\n                        while (resultSet.next()) {\r\n                            Student student = new Student();\r\n//                            student.setName(resultSet.getString(\"name\"));\r\n//                            student.setFirstname(resultSet.getString(\"firstname\"));\r\n//                            student.setGroup(resultSet.getString(\"group\"));\r\n                            student.build(resultSet);\r\n                            students.add(student);\r\n                        }\r\n\r\n                        // mapper students en Json\r\n                        ObjectMapper objectMapper = new ObjectMapper();\r\n                        String responseBody = objectMapper.writeValueAsString(students);\r\n\r\n                        response = new Response(request.getRequestId(), responseBody);\r\n                    } catch (SQLException | JsonProcessingException e) {\r\n                        response = new Response(request.getRequestId(), \"Error executing SELECT_ALL_STUDENTS query\");\r\n                        logger.error(\"Error executing SELECT_ALL_STUDENTS query: {}\", e.getMessage());\r\n                    } catch (NoSuchFieldException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n                    break;\r\n\r\n                case \"INSERT_STUDENT\":\r\n                    try {\r\n                        String requestBody = request.getRequestBody();\r\n                        ObjectMapper objectMapper = new ObjectMapper();\r\n                        Student student = objectMapper.readValue(requestBody, Student.class);\r\n\r\n                        PreparedStatement insertStatement = connection.prepareStatement(Queries.INSERT_STUDENT.query);\r\n                        insertStatement.setString(1, student.getName());\r\n                        insertStatement.setString(2, student.getFirstname());\r\n                        insertStatement.setString(3, student.getGroup());\r\n\r\n\r\n\r\n                        int rowsAffected = insertStatement.executeUpdate();\r\n\r\n                        if (rowsAffected > 0) {\r\n                            response = new Response(request.getRequestId(),String.format(\"{\\\"student_id\\\": %d}\", rowsAffected));\r\n                        } else {\r\n                            response = new Response(request.getRequestId(), \"Failed to insert student\");\r\n                        }\r\n                    } catch (SQLException | IOException e) {\r\n                        response = new Response(request.getRequestId(), \"Error executing INSERT_STUDENT query\");\r\n                        logger.error(\"Error executing INSERT_STUDENT query: {}\", e.getMessage());\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    // Handle unknown action\r\n                    response = new Response(request.getRequestId(), \"Unknown action\");\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n\r\n\r\n//    public final Response dispatch(final Request request, final Connection connection)\r\n//            throws InvocationTargetException, IllegalAccessException {\r\n//        Response response = null;\r\n//\r\n//\r\n//        return response;\r\n//    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/xmart-city-backend/src/main/java/edu/ezip/ing1/pds/business/server/XMartCityService.java b/xmart-city-backend/src/main/java/edu/ezip/ing1/pds/business/server/XMartCityService.java
--- a/xmart-city-backend/src/main/java/edu/ezip/ing1/pds/business/server/XMartCityService.java	
+++ b/xmart-city-backend/src/main/java/edu/ezip/ing1/pds/business/server/XMartCityService.java	
@@ -24,7 +24,7 @@
     private final Logger logger = LoggerFactory.getLogger(LoggingLabel);
 
     private enum Queries {
-        SELECT_ALL_STUDENTS("SELECT t.name, t.firstname, t.group FROM \"ezip-ing1\".students t"),
+        SELECT_ALL_STUDENTS("SELECT t.name, t.firstname, t.group FROM \"public2\".students t"),
         INSERT_STUDENT("INSERT into \"ezip-ing1\".students (\"name\", \"firstname\", \"group\") values (?, ?, ?)");
         private final String query;
 
